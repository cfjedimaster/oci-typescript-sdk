<?xml version='1.0' encoding='UTF-8'?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>com.oracle.oci.sdk</groupId>
    <artifactId>oci-typescript-sdk</artifactId>
    <version>0.1.0-preview1-SNAPSHOT</version>
    <relativePath>../pom.xml</relativePath>
  </parent>
  <artifactId>oci-typescript-sdk-codegen</artifactId>
  <packaging>pom</packaging>
  <name>Oracle Cloud Infrastructure SDK - Codegen Template</name>
  <description>This project contains the code generation template steps for the SDK used for Oracle Cloud Infrastructure</description>
  <url>https://docs.cloud.oracle.com/Content/API/SDKDocs/javasdk.htm</url>
  <properties>
    <codegen.spec.dir>${project.build.directory}/specs</codegen.spec.dir>
    <codegen.preprocessed.dir>${project.build.directory}/preprocessed</codegen.preprocessed.dir>
    <codegen.swagger.spec>${codegen.preprocessed.dir}/${codegen.spec.name}</codegen.swagger.spec>
    <codegen.target.package.dir>${codegen.package.name}</codegen.target.package.dir>
  </properties>
  <profiles>
    <profile>
      <id>codegen</id>
      <build>
        <pluginManagement>
          <plugins>
            <plugin>
              <groupId>org.commonjava.maven.plugins</groupId>
              <artifactId>directory-maven-plugin</artifactId>
              <version>0.1</version>
              <executions>
                <execution>
                  <id>directories</id>
                  <goals>
                    <goal>directory-of</goal>
                  </goals>
                  <phase>initialize</phase>
                  <configuration>
                    <property>ocijavasdk.basedir</property>
                    <project>
                      <groupId>com.oracle.oci.sdk</groupId>
                      <artifactId>oci-typescript-sdk</artifactId>
                    </project>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.codehaus.mojo</groupId>
              <artifactId>build-helper-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>timestamp-property</id>
                  <phase>initialize</phase>
                  <goals>
                    <goal>timestamp-property</goal>
                  </goals>
                  <configuration>
                    <name>current.year</name>
                    <pattern>yyyy</pattern>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <artifactId>maven-dependency-plugin</artifactId>
              <executions>
                <execution>
                  <id>get-spec-from-artifactory</id>
                  <phase>initialize</phase>
                  <goals>
                    <goal>unpack</goal>
                  </goals>
                  <configuration>
                    <artifactItems>
                      <artifactItem>
                        <groupId>${codegen.artifactory.groupId}</groupId>
                        <artifactId>${codegen.artifactory.artifactId}</artifactId>
                        <version>${codegen.artifactory.version}</version>
                        <type>jar</type>
                        <includes>**/*</includes>
                        <outputDirectory>${codegen.spec.dir}</outputDirectory>
                      </artifactItem>
                    </artifactItems>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.oracle.oci.sdk.utilities</groupId>
              <artifactId>spec-conditionals-preprocessor-plugin</artifactId>
              <version>1.0.6-SNAPSHOT</version>
              <executions>
                <execution>
                  <id>spec-conditionals-prefer</id>
                  <phase>initialize</phase>
                  <goals>
                    <goal>prefer</goal>
                  </goals>
                  <configuration>
                    <inputFiles>
                      <!-- New layout: source/<spec.proto.yaml> -->
                      <inputFile>${project.build.directory}/specs/source/${codegen.spec.name}</inputFile>
                      <!-- Old layout: ./<spec.proto.yaml> -->
                      <inputFile>${project.build.directory}/specs/${codegen.spec.name}</inputFile>
                    </inputFiles>
                    <outputFile>${project.build.directory}/preferred/${codegen.spec.name}</outputFile>
                  </configuration>
                </execution>
                <execution>
                  <id>spec-conditionals-preprocess</id>
                  <phase>initialize</phase>
                  <goals>
                    <goal>preprocess</goal>
                  </goals>
                  <configuration>
                    <inputFile>${project.build.directory}/preferred/${codegen.spec.name}</inputFile>
                    <outputFile>${project.build.directory}/preprocessed/${codegen.spec.name}</outputFile>
                    <!-- "${project.basedir}/../enabledGroups" because this will be called by the child projects,
                           not by this project -->
                    <groupFile>${project.basedir}/../preview-sdk.txt</groupFile>
                    <groupFileCollectionDir>${project.basedir}/../enabledGroups</groupFileCollectionDir>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.oracle.bmc.sdk</groupId>
              <artifactId>bmc-sdk-swagger-maven-plugin</artifactId>
              <version>1.117-SNAPSHOT</version>
              <executions>
                <execution>
                  <id>java-sdk-spec</id>
                  <phase>generate-sources</phase>
                  <goals>
                    <goal>generate</goal>
                  </goals>
                  <configuration>
                    <language>oracle-typescript-sdk</language>
                    <specPath>${codegen.swagger.spec}</specPath>
                    <basePackage>${codegen.package.name}</basePackage>
                    <additionalProperties>
                      <npmName>oci-sdk</npmName>
                      <npmVersion>0.1</npmVersion>
                      <serviceGroupEndpoint>${codegen.endpoint}</serviceGroupEndpoint>
                      <generateWaiters>${codegen.generate.waiters}</generateWaiters>
                      <generatePaginators>${codegen.generate.paginators}</generatePaginators>
                    </additionalProperties>
                    <externalModels>
                      <!-- Format is: <ModelName>java.class.name</ModelName> -->
                      <!-- Example: <DefinedTag>com.oracle.bmc.common.model.DefinedTag</DefinedTag> -->
                    </externalModels>
                    <outputDir>${project.build.directory}/generated-sources/</outputDir>
                    <!-- LEAVE THIS IN THE PREVIEW BRANCH, DO NOT ADD IT TO MASTER. -->
                    <!-- (OR SET IT TO "PUBLIC" IN MASTER). WE WANT TO FILTER OUT   -->
                    <!-- x-obmcs-internal-only for Preview release -->
                    <specGenerationType>PREVIEW</specGenerationType>
                    <!-- "${project.basedir}/../featureIds" because this will be called by the child projects,
                         not by this project -->
                    <featureIdConfigFile>${project.basedir}/../featureId.yaml</featureIdConfigFile>
                    <featureIdConfigDir>${project.basedir}/../featureIds</featureIdConfigDir>
                    <isTestGenerationEnabled>true</isTestGenerationEnabled>
                    <testCaseGeneratorConfigFile>${project.basedir}/../testCaseGenerator.yaml</testCaseGeneratorConfigFile>
                  </configuration>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.mycila</groupId>
              <artifactId>license-maven-plugin</artifactId>
              <version>3.0</version>
              <configuration>
                <header>${ocijavasdk.basedir}/licenseheader.txt</header>
                <basedir>${project.build.directory}/generated-sources/${codegen.package.name}</basedir>
                <includes>
                  <include>**/*.java</include>
                </includes>
                <properties>
                  <current.year>${current.year}</current.year>
                </properties>
              </configuration>
              <executions>
                <execution>
                  <id>replace-generated-licenses</id>
                  <goals>
                    <goal>format</goal>
                  </goals>
                  <phase>process-sources</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>com.theoryinpractise</groupId>
              <artifactId>googleformatter-maven-plugin</artifactId>
              <executions>
                <execution>
                  <id>reformat-generated-sources</id>
                  <configuration>
                    <includeStale>false</includeStale>
                    <sortImports>NO</sortImports>
                    <style>AOSP</style>
                    <filterModified>true</filterModified>
                    <skip>false</skip>
                    <sourceDirectory>${project.build.directory}/generated-sources/${codegen.package.name}</sourceDirectory>
                  </configuration>
                  <goals>
                    <goal>format</goal>
                  </goals>
                  <phase>process-sources</phase>
                </execution>
              </executions>
            </plugin>
            <plugin>
              <groupId>org.apache.maven.plugins</groupId>
              <artifactId>maven-antrun-plugin</artifactId>
              <executions>
                <execution>
                  <id>replace-generated-links</id>
                  <phase>process-sources</phase>
                  <configuration>
                    <target>
                      <replace dir="${project.build.directory}/generated-sources/${codegen.package.name}" token="{{DOC_SERVER_URL}}" value="https://docs.cloud.oracle.com" />
                    </target>
                    <failOnError>false</failOnError>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
                <execution>
                  <id>copy-generated-files</id>
                  <phase>process-sources</phase>
                  <configuration>
                    <target>
                      <delete failonerror="false" verbose="true">
                        <fileset dir="../../lib/${codegen.target.package.dir}/">
                          <contains text="OracleSDKGenerator" />
                        </fileset>
                      </delete>
                      <copy overwrite="true" todir="../../lib/${codegen.target.package.dir}/lib/">
                        <fileset dir="target/generated-sources/${codegen.package.name}" includes="**/*.ts">
                          <contains text="OracleSDKGenerator" />
                          <!--<not>-->
                          <!--<contains text="OracleSDKTestGenerator" />-->
                          <!--</not>-->
                        </fileset>
                      </copy>
                      <copy overwrite="true" todir="../../lib/${codegen.target.package.dir}/lib/model/">
                        <fileset dir="target/generated-sources/${codegen.package.name}.model">
                          <contains text="OracleSDKGenerator" />
                          <!--<not>-->
                          <!--<contains text="OracleSDKTestGenerator" />-->
                          <!--</not>-->
                        </fileset>
                      </copy>
                      <copy overwrite="true" todir="../../lib/${codegen.target.package.dir}/lib/response/">
                        <fileset dir="target/generated-sources/${codegen.package.name}.response">
                          <contains text="OracleSDKGenerator" />
                          <!--<not>-->
                          <!--<contains text="OracleSDKTestGenerator" />-->
                          <!--</not>-->
                        </fileset>
                      </copy>
                      <copy overwrite="true" todir="../../lib/${codegen.target.package.dir}/lib/request/">
                        <fileset dir="target/generated-sources/${codegen.package.name}.request">
                          <contains text="OracleSDKGenerator" />
                          <!--<not>-->
                          <!--<contains text="OracleSDKTestGenerator" />-->
                          <!--</not>-->
                        </fileset>
                      </copy>
                      <delete failonerror="false" verbose="true">
                        <fileset dir="../../integration-test/" includes="*.spec.ts">
                          <contains text="OracleSDKTestGenerator" />
                          <contains text="../lib/${codegen.package.name}/" />
                        </fileset>
                      </delete>
                      <copy overwrite="true" todir="../../integration-test/">
                        <fileset dir="target/generated-sources/${codegen.package.name}" includes="**/*spec.ts">
                          <contains text="OracleSDKTestGenerator" />
                          <!--<not>-->
                          <!--<contains text="OracleSDKTestGenerator" />-->
                          <!--</not>-->
                        </fileset>
                      </copy>
                      <copy file="target/generated-sources/tsconfig.json" tofile="../../lib/${codegen.target.package.dir}/tsconfig.json" />
                      <!--<delete failonerror="false" verbose="true">-->
                      <!--<fileset dir="../../bmc-addons/bmc-metadata/src/main/java/com/oracle/bmc/${codegen.package.name}/" includes="**/*MetadataInfo.java">-->
                      <!--<contains text="OracleSDKGenerator" />-->
                      <!--</fileset>-->
                      <!--</delete>-->
                      <!--<copy overwrite="true" todir="../../bmc-addons/bmc-metadata/src/main/java">-->
                      <!--<fileset dir="target/generated-sources/${codegen.package.name}/oracle-java-sdk-sources" includes="**/*MetadataInfo.java">-->
                      <!--<contains text="OracleSDKTestGenerator" />-->
                      <!--</fileset>-->
                      <!--</copy>-->
                      <!--<delete failonerror="false" verbose="true">-->
                      <!--<fileset dir="../../bmc-integtests/src/test/java/com/oracle/bmc/${codegen.package.name}/" includes="**/*AutoTest.java">-->
                      <!--<contains text="OracleSDKGenerator" />-->
                      <!--</fileset>-->
                      <!--</delete>-->
                      <!--<copy overwrite="true" todir="../../bmc-integtests/src/test/java">-->
                      <!--<fileset dir="target/generated-sources/${codegen.package.name}/oracle-java-sdk-sources" includes="**/*AutoTest.java">-->
                      <!--<contains text="OracleSDKTestGenerator" />-->
                      <!--</fileset>-->
                      <!--</copy>-->
                    </target>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
                <execution>
                  <phase>process-sources</phase>
                  <configuration>
                    <target>
                      <taskdef resource="net/sf/antcontrib/antcontrib.properties" />
                      <if>
                        <available file="../../lib/${codegen.target.package.dir}/index.ts.partial" />
                        <then>
                          <concat destfile="../../lib/${codegen.target.package.dir}/index.ts">
                            <fileset file="target/generated-sources/index.ts" />
                            <fileset file="../../lib/${codegen.target.package.dir}/index.ts.partial" />
                          </concat>
                        </then>
                        <else>
                          <copy file="target/generated-sources/index.ts" tofile="../../lib/${codegen.target.package.dir}/index.ts" />
                        </else>
                      </if>
                      <delete dir="target/generated-sources" />
                    </target>
                  </configuration>
                  <goals>
                    <goal>run</goal>
                  </goals>
                </execution>
              </executions>
              <dependencies>
                <dependency>
                  <groupId>ant-contrib</groupId>
                  <artifactId>ant-contrib</artifactId>
                  <version>20020829</version>
                </dependency>
              </dependencies>
            </plugin>
          </plugins>
        </pluginManagement>
      </build>
    </profile>
  </profiles>
  <modules>
    <module>audit-codegen</module>
    <module>containerengine-codegen</module>
    <module>core-codegen</module>
    <module>database-codegen</module>
    <module>dns-codegen</module>
    <module>email-codegen</module>
    <module>filestorage-codegen</module>
    <module>identity-codegen</module>
    <module>loadbalancer-codegen</module>
    <module>keymanagement-codegen</module>
    <module>objectstorage-codegen</module>
    <module>resourcesearch-codegen</module>
    <module>resourcemanager-codegen</module>
    <module>monitoring-codegen</module>
    <module>workrequests-codegen</module>
    <module>ons-codegen</module>
    <module>healthchecks-codegen</module>
    <module>streaming-codegen</module>
    <module>marketplace-codegen</module>
    <module>autoscaling-codegen</module>
    <module>announcementsservice-codegen</module>
    <module>waas-codegen</module>
    <module>functions-codegen</module>
    <module>budget-codegen</module>
    <module>limits-codegen</module>
    <module>apigateway-codegen</module>
    <module>dts-codegen</module>
    <module>events-codegen</module>
    <module>oda-codegen</module>
    <module>oce-codegen</module>
    <module>analytics-codegen</module>
    <module>osmanagement-codegen</module>
    <module>integration-codegen</module>
    <module>applicationmigration-codegen</module>
    <module>nosql-codegen</module>
    <module>datacatalog-codegen</module>
    <module>dataflow-codegen</module>
    <module>datascience-codegen</module>
    <module>cims-codegen</module>
    <module>datasafe-codegen</module>
  </modules>
</project>