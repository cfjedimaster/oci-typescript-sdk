/**
 * Core Services API
 * API covering the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services. Use this API
to manage resources such as virtual cloud networks (VCNs), compute instances, and
block storage volumes.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";

/**
* *Flow logs* record information about traffic that is either allowed or rejected by the
* {@link SecurityList} that control traffic in and out of a
* {@link Vnic}.
* <p>
A *flow log configuration* (`FlowLogConfig`) contains information about where to store flow
* logs (an Object Storage bucket in your tenancy), and the type of logs to store.
* <p>
**Important:** For logs to be placed in the Object Storage bucket listed in the configuration,
* an administrator must create an IAM policy in your tenancy that lets the Networking service
* put objects in that bucket. Otherwise, no flow logs can be written to the bucket.
* Here's the required policy (which consists of three separate statements):
* <p>
`define tenancy VcnFlowLogs as ocid1.tenancy.oc1..aaaaaaaacaswototo7jx2hx24wyanauiyzreowh2cmsbmrkakeaabdyk6c6q`
* <p>
`define dynamic-group FlowLogsDynamicGroup as ocid1.dynamicgroup.oc1..aaaaaaaalzalw7g5jf5ujqlzuho3adrrhlioekcjigrcbv44gim5euyuostq`
* <p>
`admit dynamic-group FlowLogsDynamicGroup of tenancy VcnFlowLogs to manage objects in tenancy where target.bucket.name='yourbucketname'`
* <p>
To enable flow logs for a subnet: after creating a flow
* log configuration, attach the flow log configuration to that subnet. See
* {@link FlowLogConfigAttachment} and
* {@link #createFlowLogConfigAttachment(CreateFlowLogConfigAttachmentRequest) createFlowLogConfigAttachment}.
* <p>
**Warning:** Oracle recommends that you avoid using any confidential information when you
* supply string values using the API.
* 
*/
export interface FlowLogConfig {
  /**
   * The [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm) of the compartment containing the flow
   * log configuration.
   *
   */
  "compartmentId": string;
  /**
    * Defined tags for this resource. Each key is predefined and scoped to a
* namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
* <p>
Example: `{\"Operations\": {\"CostCenter\": \"42\"}}`
* 
    */
  "definedTags"?: { [key: string]: { [key: string]: any } };
  /**
   * A user-friendly name. Does not have to be unique, and it's changeable. Avoid
   * entering confidential information.
   *
   */
  "displayName": string;
  /**
    * Free-form tags for this resource. Each tag is a simple key-value pair with no
* predefined name, type, or namespace. For more information, see [Resource Tags](https://docs.cloud.oracle.com/Content/General/Concepts/resourcetags.htm).
* <p>
Example: `{\"Department\": \"Finance\"}`
* 
    */
  "freeformTags"?: { [key: string]: string };
  /**
   * The flow log configuration's [OCID](https://docs.cloud.oracle.com/Content/General/Concepts/identifiers.htm).
   */
  "id": string;
  /**
   * The flow log configuration's current state.
   */
  "lifecycleState": FlowLogConfig.LifecycleState;
  /**
   * Type or types of flow logs to store. `ALL` includes records for both accepted traffic and
   * rejected traffic.
   *
   */
  "flowLogType": FlowLogConfig.FlowLogType;
  /**
   * Where to store the flow logs.
   *
   */
  "destination": model.FlowLogObjectStorageDestination;
  /**
    * The date and time the flow log configuration was created, in the format defined by RFC3339.
* <p>
Example: `2016-08-25T21:10:29.600Z`
* 
    */
  "timeCreated": Date;
}

export namespace FlowLogConfig {
  export enum LifecycleState {
    PROVISIONING = "PROVISIONING",
    AVAILABLE = "AVAILABLE",
    TERMINATING = "TERMINATING",
    TERMINATED = "TERMINATED",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export enum FlowLogType {
    ALL = "ALL",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: FlowLogConfig): object {
    const jsonObj = {
      ...obj,
      ...{
        "destination": obj.destination
          ? model.FlowLogDestination.getJsonObj(obj.destination)
          : undefined
      }
    };

    return jsonObj;
  }
}
