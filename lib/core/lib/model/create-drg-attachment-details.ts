/**
 * Core Services API
 * API covering the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services. Use this API
to manage resources such as virtual cloud networks (VCNs), compute instances, and
block storage volumes.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";

export interface CreateDrgAttachmentDetails {
  /**
   * A user-friendly name. Does not have to be unique. Avoid entering confidential information.
   */
  "displayName"?: string;
  /**
   * The OCID of the DRG.
   */
  "drgId": string;
  /**
    * The OCID of the route table the DRG attachment will use.
* <p>
If you don't specify a route table here, the DRG attachment is created without an associated route
* table. The Networking service does NOT automatically associate the attached VCN's default route table
* with the DRG attachment.
* <p>
For information about why you would associate a route table with a DRG attachment, see:
* <p>
  * [Transit Routing: Access to Multiple VCNs in Same Region](https://docs.cloud.oracle.com/Content/Network/Tasks/transitrouting.htm)
*   * [Transit Routing: Private Access to Oracle Services](https://docs.cloud.oracle.com/Content/Network/Tasks/transitroutingoracleservices.htm)
* 
    */
  "routeTableId"?: string;
  /**
   * The OCID of the VCN.
   */
  "vcnId": string;
}

export namespace CreateDrgAttachmentDetails {
  export function getJsonObj(obj: CreateDrgAttachmentDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
