/**
 * Core Services API
 * API covering the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services. Use this API
to manage resources such as virtual cloud networks (VCNs), compute instances, and
block storage volumes.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";

/**
 * Optional object to specify ports for a UDP rule. If you specify UDP as the
 * protocol but omit this object, then all ports are allowed.
 *
 */
export interface UdpOptions {
  /**
   * An inclusive range of allowed destination ports. Use the same number for the min and max
   * to indicate a single port. Defaults to all ports if not specified.
   *
   */
  "destinationPortRange"?: model.PortRange;
  /**
   * An inclusive range of allowed source ports. Use the same number for the min and max to
   * indicate a single port. Defaults to all ports if not specified.
   *
   */
  "sourcePortRange"?: model.PortRange;
}

export namespace UdpOptions {
  export function getJsonObj(obj: UdpOptions): object {
    const jsonObj = {
      ...obj,
      ...{
        "destinationPortRange": obj.destinationPortRange
          ? model.PortRange.getJsonObj(obj.destinationPortRange)
          : undefined,
        "sourcePortRange": obj.sourcePortRange
          ? model.PortRange.getJsonObj(obj.sourcePortRange)
          : undefined
      }
    };

    return jsonObj;
  }
}
