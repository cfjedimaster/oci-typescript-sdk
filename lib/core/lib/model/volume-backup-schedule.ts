/**
 * Core Services API
 * API covering the [Networking](/iaas/Content/Network/Concepts/overview.htm),
[Compute](/iaas/Content/Compute/Concepts/computeoverview.htm), and
[Block Volume](/iaas/Content/Block/Concepts/overview.htm) services. Use this API
to manage resources such as virtual cloud networks (VCNs), compute instances, and
block storage volumes.

 * OpenAPI spec version: 20160918
 * 
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";

/**
 * Defines the backup frequency and retention period for a volume backup policy. For more information,
 * see [Policy-Based Backups](https://docs.cloud.oracle.com/iaas/Content/Block/Tasks/schedulingvolumebackups.htm).
 *
 */
export interface VolumeBackupSchedule {
  /**
   * The type of volume backup to create.
   */
  "backupType": VolumeBackupSchedule.BackupType;
  /**
   * The number of seconds that the volume backup start time should be shifted from the default interval boundaries specified by the period. The volume backup start time is the frequency start time plus the offset.
   */
  "offsetSeconds"?: number;
  /**
   * The volume backup frequency.
   */
  "period": VolumeBackupSchedule.Period;
  /**
    * Indicates how the offset is defined. If value is `STRUCTURED`, then `hourOfDay`, `dayOfWeek`, `dayOfMonth`, and `month` fields are used and `offsetSeconds` will be ignored in requests and users should ignore its value from the responses.
* <p>
`hourOfDay` is applicable for periods `ONE_DAY`, `ONE_WEEK`, `ONE_MONTH` and `ONE_YEAR`.
* <p>
`dayOfWeek` is applicable for period `ONE_WEEK`.
* <p>
`dayOfMonth` is applicable for periods `ONE_MONTH` and `ONE_YEAR`.
* <p>
'month' is applicable for period 'ONE_YEAR'.
* <p>
They will be ignored in the requests for inapplicable periods.
* <p>
If value is `NUMERIC_SECONDS`, then `offsetSeconds` will be used for both requests and responses and the structured fields will be ignored in the requests and users should ignore their values from the responses.
* <p>
For clients using older versions of Apis and not sending `offsetType` in their requests, the behaviour is just like `NUMERIC_SECONDS`.
    */
  "offsetType"?: VolumeBackupSchedule.OffsetType;
  /**
   * The hour of the day to schedule the volume backup.
   */
  "hourOfDay"?: number;
  /**
   * The day of the week to schedule the volume backup.
   */
  "dayOfWeek"?: VolumeBackupSchedule.DayOfWeek;
  /**
   * The day of the month to schedule the volume backup.
   */
  "dayOfMonth"?: number;
  /**
   * The month of the year to schedule the volume backup.
   */
  "month"?: VolumeBackupSchedule.Month;
  /**
   * How long, in seconds, to keep the volume backups created by this schedule.
   */
  "retentionSeconds": number;
  /**
   * Specifies what time zone is the schedule in
   */
  "timeZone"?: VolumeBackupSchedule.TimeZone;
}

export namespace VolumeBackupSchedule {
  export enum BackupType {
    FULL = "FULL",
    INCREMENTAL = "INCREMENTAL",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export enum Period {
    HOUR = "ONE_HOUR",
    DAY = "ONE_DAY",
    WEEK = "ONE_WEEK",
    MONTH = "ONE_MONTH",
    YEAR = "ONE_YEAR",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export enum OffsetType {
    STRUCTURED = "STRUCTURED",
    NUMERICSECONDS = "NUMERIC_SECONDS",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export enum DayOfWeek {
    MONDAY = "MONDAY",
    TUESDAY = "TUESDAY",
    WEDNESDAY = "WEDNESDAY",
    THURSDAY = "THURSDAY",
    FRIDAY = "FRIDAY",
    SATURDAY = "SATURDAY",
    SUNDAY = "SUNDAY",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export enum Month {
    JANUARY = "JANUARY",
    FEBRUARY = "FEBRUARY",
    MARCH = "MARCH",
    APRIL = "APRIL",
    MAY = "MAY",
    JUNE = "JUNE",
    JULY = "JULY",
    AUGUST = "AUGUST",
    SEPTEMBER = "SEPTEMBER",
    OCTOBER = "OCTOBER",
    NOVEMBER = "NOVEMBER",
    DECEMBER = "DECEMBER",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export enum TimeZone {
    UTC = "UTC",
    REGIONALDATACENTERTIME = "REGIONAL_DATA_CENTER_TIME",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: VolumeBackupSchedule): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
