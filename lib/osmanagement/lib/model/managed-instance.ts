/**
 * OSMS
 * OS Management as a Service API definition
 * OpenAPI spec version: 20190801
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";

/**
 * Detail information for an OCI Compute instance that is being managed
 */
export interface ManagedInstance {
  /**
   * Managed Instance identifier
   */
  "displayName": string;
  /**
   * OCID for the managed instance
   */
  "id": string;
  /**
   * Information specified by the user about the managed instance
   */
  "description"?: string;
  /**
   * Time at which the instance last checked in
   */
  "lastCheckin"?: string;
  /**
   * Time at which the instance last booted
   */
  "lastBoot"?: string;
  /**
   * Number of updates available to be installed
   */
  "updatesAvailable"?: number;
  /**
   * Operating System Name
   */
  "osName"?: string;
  /**
   * Operating System Version
   */
  "osVersion"?: string;
  /**
   * Operating System Kernel Version
   */
  "osKernelVersion"?: string;
  /**
   * OCID for the Compartment
   */
  "compartmentId": string;
  /**
   * status of the managed instance.
   */
  "status"?: ManagedInstance.Status;
  /**
   * the parent (base) Software Source attached to the Managed Instance
   */
  "parentSoftwareSource"?: model.SoftwareSourceId;
  /**
   * list of child Software Sources attached to the Managed Instance
   */
  "childSoftwareSources"?: Array<model.SoftwareSourceId>;
  /**
   * The ids of the managed instance groups of which this instance is a
   * member.
   *
   */
  "managedInstanceGroups"?: Array<model.Id>;
}

export namespace ManagedInstance {
  export enum Status {
    NORMAL = "NORMAL",
    UNREACHABLE = "UNREACHABLE",
    ERROR = "ERROR",
    WARNING = "WARNING",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: ManagedInstance): object {
    const jsonObj = {
      ...obj,
      ...{
        "parentSoftwareSource": obj.parentSoftwareSource
          ? model.SoftwareSourceId.getJsonObj(obj.parentSoftwareSource)
          : undefined,
        "childSoftwareSources": obj.childSoftwareSources
          ? obj.childSoftwareSources.map(item => {
              return model.SoftwareSourceId.getJsonObj(item);
            })
          : undefined,
        "managedInstanceGroups": obj.managedInstanceGroups
          ? obj.managedInstanceGroups.map(item => {
              return model.Id.getJsonObj(item);
            })
          : undefined
      }
    };

    return jsonObj;
  }
}
