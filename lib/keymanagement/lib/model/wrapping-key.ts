/**
 * Key Management Service API
 * API for managing and performing operations with keys and vaults.
 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";

export interface WrappingKey {
  /**
   * The OCID of the compartment that contains this key.
   */
  "compartmentId": string;
  /**
   * The OCID of the key.
   */
  "id": string;
  /**
    * The key's current state.
* <p>
Example: `ENABLED`
* 
    */
  "lifecycleState": WrappingKey.LifecycleState;
  /**
   * The public key in PEM format to encrypt the key material before importing it with ImportKey/ImportKeyVersion.
   *
   */
  "publicKey": string;
  /**
    * The date and time the key was created, expressed in [RFC 3339](https://tools.ietf.org/html/rfc3339) timestamp format.
* <p>
Example: `2018-04-03T21:10:29.600Z`
* 
    */
  "timeCreated": Date;
  /**
   * The OCID of the vault that contains this key.
   */
  "vaultId": string;
}

export namespace WrappingKey {
  export enum LifecycleState {
    CREATING = "CREATING",
    ENABLED = "ENABLED",
    DELETING = "DELETING",
    DELETED = "DELETED",

    /**
     * This value is used if a service returns a value for this enum that is not recognized by this
     * version of the SDK.
     */
    UNKNOWN_VALUE = "UNKNOWN_VALUE"
  }

  export function getJsonObj(obj: WrappingKey): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
