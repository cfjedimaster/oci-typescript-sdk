/**
 * Key Management Service API
 * API for managing and performing operations with keys and vaults.
 * OpenAPI spec version: release
 * Contact: sparta_kms_us_grp@oracle.com
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");

export interface DecryptDataDetails {
  /**
   * Information that can be used to provide an encryption context for the encrypted data.
   * The length of the string representation of the associated data must be fewer than 4096 characters.
   *
   */
  "associatedData"?: { [key: string]: string };
  /**
   * The encrypted data to decrypt.
   */
  "ciphertext": string;
  /**
   * The OCID of the key used to encrypt the ciphertext.
   */
  "keyId": string;
  /**
   * Information that provides context for audit logging. You can provide this additional
   * data as key-value pairs to include in audit logs when audit logging is enabled.
   *
   */
  "loggingContext"?: { [key: string]: string };
}

export namespace DecryptDataDetails {
  export function getJsonObj(obj: DecryptDataDetails): object {
    const jsonObj = { ...obj, ...{} };

    return jsonObj;
  }
}
