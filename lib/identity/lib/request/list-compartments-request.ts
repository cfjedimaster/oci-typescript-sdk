/**
 *
 *
 * OpenAPI spec version: 20160918
 *
 *
 * NOTE: This class is auto generated by OracleSDKGenerator.
 * Do not edit the class manually.
 *
 * Copyright (c) 2020, Oracle and/or its affiliates.  All rights reserved.
 * This software is dual-licensed to you under the Universal Permissive License (UPL) 1.0 as shown at https://oss.oracle.com/licenses/upl or Apache License 2.0 as shown at http://www.apache.org/licenses/LICENSE-2.0. You may choose either license.
 */

import * as model from "../model";
import common = require("oci-common");
export interface ListCompartmentsRequest {
  /**
   * The OCID of the compartment (remember that the tenancy is simply the root compartment).
   *
   */
  "compartmentId": string;
  /**
   * The value of the `opc-next-page` response header from the previous \"List\" call.
   *
   */
  "page"?: string;
  /**
   * The maximum number of items to return in a paginated \"List\" call.
   *
   */
  "limit"?: number;
  /**
 * Valid values are `ANY` and `ACCESSIBLE`. Default is `ANY`.
* Setting this to `ACCESSIBLE` returns only those compartments for which the
* user has INSPECT permissions directly or indirectly (permissions can be on a
* resource in a subcompartment). For the compartments on which the user indirectly has
* INSPECT permissions, a restricted set of fields is returned.
* <p>
When set to `ANY` permissions are not checked.
* 
 */
  "accessLevel"?: ListCompartmentsRequest.AccessLevel;
  /**
   * Default is false. Can only be set to true when performing
   * ListCompartments on the tenancy (root compartment).
   * When set to true, the hierarchy of compartments is traversed
   * and all compartments and subcompartments in the tenancy are
   * returned depending on the the setting of `accessLevel`.
   *
   */
  "compartmentIdInSubtree"?: boolean;
}

export namespace ListCompartmentsRequest {
  export enum AccessLevel {
    ANY = "ANY",
    ACCESSIBLE = "ACCESSIBLE"
  }
}
